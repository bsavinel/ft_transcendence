get:
  operationId: UsersController_getGameOfUser
  summary: Get games of user with is id
  parameters:
    - name: id
      required: true
      in: path
      description: Id of the player
      allowEmptyValue: false
      examples:
        a:
          summary: Palyer with id 1
          value: '1'
        b:
          summary: Player with id 27
          value: '27'
      schema:
        type: number
    - name: limit
      required: true
      in: query
      description: Limit of games to get (default and maximum 50)
      allowEmptyValue: true
      examples:
        a:
          summary: Get 37 games
          value: '37'
      schema:
        type: number
    - name: idFirst
      required: true
      in: query
      description: Id to start the next get
      allowEmptyValue: true
      examples:
        a:
          summary: Start after game with id 27
          value: '27'
      schema:
        type: number
    - name: asWin
      required: true
      in: query
      description: Only get games where the user win or lose
      allowEmptyValue: true
      examples:
        a:
          summary: Game win
          value: 'true'
        b:
          summary: Game Lose
          value: 'false'
      schema:
        type: boolean
  responses:
    '200':
      description: >-
        Return an array containing {limit} games of one player, from idFirst
        from the youngest game to the oldest game
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              required:
                - id
                - winnerId
                - isFinish
                - createdAt
                - players
              properties:
                id:
                  type: number
                winnerId:
                  type: number
                isFinish:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                players:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - gameId
                      - userId
                      - asWin
                      - score
                    properties:
                      id:
                        type: number
                      gameId:
                        type: number
                      userId:
                        type: number
                      asWin:
                        type: boolean
                      score:
                        type: number
    '400':
      description: >-
        400 is returned when : <br/>- Additional query params are passed
        <br/>- Argument could not be parsed as number <br/>- 'idFirst' or
        'limit' is negative <br/>- 'asWin' is not 'true' or 'false'
  tags:
    - Users